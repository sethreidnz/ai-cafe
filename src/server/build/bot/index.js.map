{"version":3,"sources":["../../src/bot/index.js"],"names":["builder","require","azure","config","documentDbOptions","host","process","env","COSMOSDB_HOST","masterKey","COSMOSDB_KEY","database","collection","connector","appId","MicrosoftAppId","appPassword","MicrosoftAppPassword","bot","UniversalBot","docDbClient","DocumentDbClient","cosmosStorage","AzureBotStorage","gzipData","set","luisAppId","LuisAppId","luisAPIKey","LuisAPIKey","luisAPIHostName","LuisAPIHostName","Error","LuisModelUrl","recognizer","LuisRecognizer","intents","IntentDialog","recognizers","matches","session","send","message","text","args","beginDialog","onDefault","dialog"],"mappings":";;;;;;;AAEA;;;;AAEA;;AACA;;AACA;;;;AACA;;;;AAPA,IAAIA,UAAUC,QAAQ,YAAR,CAAd;AACA,IAAIC,QAAQD,QAAQ,kBAAR,CAAZ;;AAEA,iBAAOE,MAAP;;;AAMA,IAAIC,oBAAoB;AACpBC,UAAMC,QAAQC,GAAR,CAAYC,aADE;AAEpBC,eAAWH,QAAQC,GAAR,CAAYG,YAFH;AAGpBC,qCAHoB;AAIpBC;AAJoB,CAAxB;;AAOA;AACO,IAAMC,gCAAY,uCAAqB;AAC5CC,WAAOR,QAAQC,GAAR,CAAYQ,cADyB;AAE5CC,iBAAaV,QAAQC,GAAR,CAAYU;AAFmB,CAArB,CAAlB;;AAKP;AACA,IAAMC,MAAM,IAAIlB,QAAQmB,YAAZ,CAAyBN,SAAzB,CAAZ;AACA,IAAIO,cAAc,IAAIlB,MAAMmB,gBAAV,CAA2BjB,iBAA3B,CAAlB;AACA,IAAIkB,gBAAgB,IAAIpB,MAAMqB,eAAV,CAA0B,EAAEC,UAAU,KAAZ,EAA1B,EAA+CJ,WAA/C,CAApB;AACAF,IAAIO,GAAJ,CAAQ,SAAR,EAAmBH,aAAnB;;AAEA;AACA,IAAMI,YAAYpB,QAAQC,GAAR,CAAYoB,SAA9B;AACA,IAAMC,aAAatB,QAAQC,GAAR,CAAYsB,UAA/B;AACA,IAAMC,kBAAkBxB,QAAQC,GAAR,CAAYwB,eAApC;AACA,IAAI,CAACL,SAAD,IAAc,CAACE,UAAf,IAA6B,CAACE,eAAlC,EAAmD;AACjD,UAAM,IAAIE,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,IAAMC,8EAA4EP,SAA5E,0BAA0GE,UAAhH;;AAEA;AACA,IAAIM,aAAa,IAAIlC,QAAQmC,cAAZ,CAA2BF,YAA3B,CAAjB;AACA,IAAIG,UAAU,IAAIpC,QAAQqC,YAAZ,CAAyB,EAAEC,aAAa,CAACJ,UAAD,CAAf,EAAzB,EACbK,OADa,CACL,UADK,EACO,UAACC,OAAD,EAAa;AAC9BA,YAAQC,IAAR,CAAa,+CAAb,EAA8DD,QAAQE,OAAR,CAAgBC,IAA9E;AACH,CAHa,EAIbJ,OAJa,CAIL,OAJK,EAII,UAACC,OAAD,EAAa;AAC3BA,YAAQC,IAAR,CAAa,4CAAb,EAA2DD,QAAQE,OAAR,CAAgBC,IAA3E;AACH,CANa,EAObJ,OAPa,CAOL,SAPK,EAOM,UAACC,OAAD,EAAUI,IAAV,EAAmB;AACnCJ,YAAQK,WAAR,uCAA6CD,IAA7C;AACH,CATa,EAUbL,OAVa,CAUL,qBAVK,EAUkB,UAACC,OAAD,EAAa;AAC3CA,YAAQC,IAAR,CAAa,gDAAb,EAA+DD,QAAQE,OAAR,CAAgBC,IAA/E;AACD,CAZa,EAabJ,OAba,CAaL,kBAbK,EAae,UAACC,OAAD,EAAa;AACtCA,YAAQC,IAAR,CAAa,6CAAb,EAA4DD,QAAQE,OAAR,CAAgBC,IAA5E;AACH,CAfa,EAgBbG,SAhBa,CAgBH,UAACN,OAAD,EAAa;AACpBA,YAAQC,IAAR,CAAa,qCAAb,EAAoDD,QAAQE,OAAR,CAAgBC,IAApE;AACH,CAlBa,CAAd;;AAoBAzB,IAAI6B,MAAJ,CAAW,GAAX,EAAgBX,OAAhB;AACA,uBAAclB,GAAd","file":"index.js","sourcesContent":["var builder = require('botbuilder');\r\nvar azure = require('botbuilder-azure'); \r\nimport dotenv from 'dotenv';\r\ndotenv.config()\r\nimport { DATABASE_NAME, BOT_DATA_COLLECTION_NAME } from '../database/contants'\r\nimport { RESERVATION_DIALOG_NAME } from './dialogs/reservation';\r\nimport createDialogs from './dialogs';\r\nimport { KoaChatConnector } from './koa-chat-connector';\r\n\r\nvar documentDbOptions = {\r\n    host: process.env.COSMOSDB_HOST, \r\n    masterKey: process.env.COSMOSDB_KEY, \r\n    database: DATABASE_NAME,   \r\n    collection: BOT_DATA_COLLECTION_NAME\r\n};\r\n\r\n// Configure the connector\r\nexport const connector = new KoaChatConnector({\r\n  appId: process.env.MicrosoftAppId,\r\n  appPassword: process.env.MicrosoftAppPassword\r\n});\r\n\r\n// Setup the bot with CosmosDB Storage\r\nconst bot = new builder.UniversalBot(connector);\r\nvar docDbClient = new azure.DocumentDbClient(documentDbOptions);\r\nvar cosmosStorage = new azure.AzureBotStorage({ gzipData: false }, docDbClient);\r\nbot.set('storage', cosmosStorage);\r\n\r\n//configure LUIS\r\nconst luisAppId = process.env.LuisAppId;\r\nconst luisAPIKey = process.env.LuisAPIKey;\r\nconst luisAPIHostName = process.env.LuisAPIHostName;\r\nif (!luisAppId || !luisAPIKey || !luisAPIHostName) {\r\n  throw new Error(\"Required LUIS settings are not set.\");\r\n}\r\n\r\nconst LuisModelUrl = `https://westus.api.cognitive.microsoft.com/luis/v2.0/apps/${luisAppId}?subscription-key=${luisAPIKey}`;\r\n\r\n// Main dialog with LUIS\r\nvar recognizer = new builder.LuisRecognizer(LuisModelUrl);\r\nvar intents = new builder.IntentDialog({ recognizers: [recognizer] })\r\n.matches('Greeting', (session) => {\r\n    session.send('You reached Greeting intent, you said \\'%s\\'.', session.message.text);\r\n})\r\n.matches('Order', (session) => {\r\n    session.send('You reached Order intent, you said \\'%s\\'.', session.message.text);\r\n})\r\n.matches('Booking', (session, args) => {\r\n    session.beginDialog(RESERVATION_DIALOG_NAME, args);\r\n})\r\n.matches('Utilities.StartOver', (session) => {\r\n  session.send('You reached StartOver intent, you said \\'%s\\'.', session.message.text);\r\n})\r\n.matches('Utilities.Cancel', (session) => {\r\n    session.send('You reached Cancel intent, you said \\'%s\\'.', session.message.text);\r\n})\r\n.onDefault((session) => {\r\n    session.send('Sorry, I did not understand \\'%s\\'.', session.message.text);\r\n});\r\n\r\nbot.dialog('/', intents); \r\ncreateDialogs(bot);  \r\n\r\n\r\n"]}