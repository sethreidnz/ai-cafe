{"version":3,"sources":["../../src/database/database-collection-service.js"],"names":["uuidv4","require","DatabaseCollectionService","constructor","documentClient","databaseId","collectionId","collection","init","bind","createDatabase","find","addItem","upsertItem","getItem","deleteItem","ensureCollectionExists","getOrCreateCollection","error","console","log","getOrCreateDatabase","database","getDatabase","databaseResponse","createDatabaseAsync","id","resource","result","querySpec","query","parameters","name","value","queryIterator","queryDatabases","results","toArrayAsync","feed","length","createCollection","databaseLink","createCollectionAsync","response","getCollection","_self","queryCollections","getAll","queryDocuments","item","createDocumentAsync","updatedItem","upsertDocumentAsync","itemId","currentItem","Error","deleteDocumentAsync"],"mappings":"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","file":"database-collection-service.js","sourcesContent":["const uuidv4 = require(\"uuid/v4\");\r\n\r\nexport class DatabaseCollectionService {\r\n  constructor(documentClient, databaseId, collectionId) {\r\n    this.documentClient = documentClient;\r\n    this.databaseId = databaseId;\r\n    this.collectionId = collectionId;\r\n    this.collection = null;\r\n    this.init.bind(this);\r\n    this.createDatabase.bind(this);\r\n    this.find.bind(this);\r\n    this.addItem.bind(this);\r\n    this.upsertItem.bind(this);\r\n    this.getItem.bind(this);\r\n    this.deleteItem.bind(this);\r\n  }\r\n\r\n  async ensureCollectionExists() {\r\n    if (this.collection) return;\r\n    await this.init();\r\n  }\r\n\r\n  async init() {\r\n    try {\r\n      const collection = await this.getOrCreateCollection(\r\n        this.databaseId,\r\n        this.collectionId,\r\n      );\r\n      this.collection = collection;\r\n      return this;\r\n    } catch (error) {\r\n      console.error(\r\n        `Error initializing database collection service for database: '${\r\n          this.databaseId\r\n        }', collectionId: '${this.collectionId}'`,\r\n      );\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getOrCreateDatabase(databaseId) {\r\n    let database = await this.getDatabase(databaseId);\r\n    if (!database) {\r\n      database = this.createDatabase(databaseId);\r\n    }\r\n    return database;\r\n  }\r\n\r\n  async createDatabase(databaseId) {\r\n    const databaseResponse = await this.documentClient.createDatabaseAsync({\r\n      id: databaseId,\r\n    });\r\n    return databaseResponse.resource;\r\n  }\r\n\r\n  async getDatabase(databaseId) {\r\n    let result;\r\n    const querySpec = {\r\n      query: 'SELECT * FROM root r WHERE  r.id = @id',\r\n      parameters: [\r\n        {\r\n          name: '@id',\r\n          value: databaseId,\r\n        },\r\n      ],\r\n    };\r\n    const queryIterator = await this.documentClient.queryDatabases(querySpec);\r\n    const results = await queryIterator.toArrayAsync();\r\n    return results.feed.length !== 0 ? results.feed[0] : null;\r\n  }\r\n\r\n  async createCollection(databaseLink, collectionId) {\r\n    const databaseResponse = await this.documentClient.createCollectionAsync(\r\n      databaseLink,\r\n      {\r\n        id: collectionId,\r\n      },\r\n    );\r\n    return databaseResponse.response;\r\n  }\r\n\r\n  async getOrCreateCollection(databaseId, collectionId) {\r\n    const database = await this.getOrCreateDatabase(databaseId);\r\n    let collection = await this.getCollection(database._self, collectionId);\r\n    if (!collection) {\r\n      collection = this.createCollection(database._self, collectionId);\r\n    }\r\n    return collection;\r\n  }\r\n\r\n  async getCollection(databaseLink, collectionId) {\r\n    let result;\r\n    const querySpec = {\r\n      query: 'SELECT * FROM root r WHERE r.id=@id',\r\n      parameters: [\r\n        {\r\n          name: '@id',\r\n          value: collectionId,\r\n        },\r\n      ],\r\n    };\r\n    const queryIterator = await this.documentClient.queryCollections(\r\n      databaseLink,\r\n      querySpec,\r\n    );\r\n    const results = await queryIterator.toArrayAsync();\r\n    return results.feed.length !== 0 ? results.feed[0] : null;\r\n  }\r\n\r\n  async getAll() {\r\n    await this.ensureCollectionExists();\r\n    const results = await this.find('SELECT * from c');\r\n    return results;\r\n  }\r\n\r\n  async find(querySpec) {\r\n    await this.ensureCollectionExists();\r\n    const queryIterator = await this.documentClient.queryDocuments(this.collection._self, querySpec);\r\n    const results = await queryIterator.toArrayAsync();\r\n    return results.feed;\r\n  }\r\n\r\n  async addItem(item) {\r\n    await this.ensureCollectionExists();\r\n    item.id = uuidv4();\r\n    await this.documentClient.createDocumentAsync(this.collection._self, item);\r\n    return item;\r\n  }\r\n\r\n  async upsertItem(updatedItem) {\r\n    await this.ensureCollectionExists();\r\n    await this.documentClient.upsertDocumentAsync(this.collection._self, updatedItem);\r\n    return updatedItem;\r\n  }\r\n\r\n  async getItem(itemId) {\r\n    await this.ensureCollectionExists();\r\n    const querySpec = {\r\n      query: 'SELECT * FROM root r WHERE r.id = @id',\r\n      parameters: [{ name: '@id', value: itemId }],\r\n    };\r\n    const queryIterator = await this.documentClient.queryDocuments(this.collection._self, querySpec);\r\n    const results = await queryIterator.toArrayAsync();\r\n    return results.feed[0];\r\n  }\r\n\r\n  async deleteItem(itemId) {\r\n    await this.ensureCollectionExists();\r\n    const currentItem = await this.getItem(itemId);\r\n    if (!currentItem) {\r\n      throw new Error(`Cannot delete item ${itemId} because it doesn't exist.`);\r\n    }\r\n    return await this.documentClient.deleteDocumentAsync(currentItem._self);\r\n  }\r\n}\r\n"]}