{"version":3,"sources":["../../src/routes/reservations.js"],"names":["uuidv4","require","reservationService","router","get","ctx","next","allOrders","getAll","body","itemId","params","id","order","getItem","post","request","createItem","updatedOrder","status","put","upsertItem","delete","deleteItem"],"mappings":";;;;;AAAA,IAAMA,SAASC,QAAQ,SAAR,CAAf;;eAC+BA,QAAQ,aAAR,C;IAAvBC,kB,YAAAA,kB;;kBAEO,kBAAU;AACvBC,SAAOC,GAAP,CAAW,mBAAX,EAAgC,gBAAOC,GAAP,EAAYC,IAAZ,EAAqB;AACnD,QAAMC,YAAY,MAAML,mBAAmBM,MAAnB,CAA0B,sBAA1B,CAAxB;AACAH,QAAII,IAAJ,GAAWF,SAAX;AACD,GAHD;;AAKAJ,SAAOC,GAAP,CAAW,uBAAX,EAAoC,gBAAOC,GAAP,EAAYC,IAAZ,EAAqB;AACvD,QAAMI,SAASL,IAAIM,MAAJ,CAAWC,EAA1B;AACA,QAAMC,QAAQ,MAAMX,mBAAmBY,OAAnB,CAA2BJ,MAA3B,CAApB;AACAL,QAAII,IAAJ,GAAWI,KAAX;AACD,GAJD;;AAMAV,SAAOY,IAAP,CAAY,eAAZ,EAA6B,gBAAOV,GAAP,EAAYC,IAAZ,EAAqB;AAChD,QAAMO,QAAQR,IAAIW,OAAJ,CAAYP,IAA1B;AACA,UAAMP,mBAAmBe,UAAnB,CAA8BC,YAA9B,CAAN;AACAb,QAAIc,MAAJ,GAAa,GAAb;AACD,GAJD;;AAMAhB,SAAOiB,GAAP,CAAW,uBAAX,EAAoC,gBAAOf,GAAP,EAAYC,IAAZ,EAAqB;AACvD,QAAMI,SAASL,IAAIM,MAAJ,CAAWC,EAA1B;AACA,QAAMM,eAAeb,IAAIW,OAAJ,CAAYP,IAAjC;AACA,UAAMP,mBAAmBmB,UAAnB,CAA8BH,YAA9B,CAAN;AACAb,QAAIc,MAAJ,GAAa,GAAb;AACD,GALD;;AAOAhB,SAAOmB,MAAP,CAAc,uBAAd,EAAuC,gBAAOjB,GAAP,EAAYC,IAAZ,EAAqB;AAC1D,QAAMI,SAASL,IAAIM,MAAJ,CAAWC,EAA1B;AACA,UAAMV,mBAAmBqB,UAAnB,CAA8Bb,MAA9B,CAAN;AACAL,QAAIc,MAAJ,GAAa,GAAb;AACD,GAJD;AAKD,C","file":"reservations.js","sourcesContent":["const uuidv4 = require(\"uuid/v4\");\nconst { reservationService } = require(\"../database\");\n\nexport default router => {\n  router.get('/api/reservations', async (ctx, next) => {\n    const allOrders = await reservationService.getAll(\"SELECT * FROM Orders\");\n    ctx.body = allOrders\n  });\n  \n  router.get('/api/reservations/:id', async (ctx, next) => {\n    const itemId = ctx.params.id;\n    const order = await reservationService.getItem(itemId);\n    ctx.body = order\n  });\n  \n  router.post('/reservations', async (ctx, next) => {\n    const order = ctx.request.body;\n    await reservationService.createItem(updatedOrder);\n    ctx.status = 200;\n  });\n  \n  router.put('/api/reservations/:id', async (ctx, next) => {\n    const itemId = ctx.params.id;\n    const updatedOrder = ctx.request.body;\n    await reservationService.upsertItem(updatedOrder);\n    ctx.status = 200;\n  });\n  \n  router.delete('/api/reservations/:id', async (ctx, next) => {\n    const itemId = ctx.params.id;\n    await reservationService.deleteItem(itemId);\n    ctx.status = 200;\n  });\n};\n"]}